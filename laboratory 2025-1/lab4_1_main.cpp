/*
I.	Разработать классы согласно варианту и добавить в них:
•	конструктор, который инициализирует поля класса пустыми значениями;
•	конструктор, с параметрами, который инициализирует поля класса переданными  значениями;
•	копирующий конструктор;
•	деструктор, сообщающий об удалении объекта;
•	создать класс «хранилище» с функционалом добавления и удаления объекта класса;
•	реализовать сохранение хранилища в файл.
II.	Разработать приложение и выполнить тестирование всех функций.

Создайте базовый класс Animal с виртуальной функцией move().
Создайте производные классы Bird и Fish, переопределяющие эту функцию для движения по воздуху и воде соответственно.
 */

#include "lab4_1_class.h"

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    setlocale(LC_ALL, "Russian");
    // Создание хранилища
    Storage storage;

    // Добавляем объекты в хранилище
    storage.add(new Bird("Орёл"));
    storage.add(new Fish("Окунь"));
    storage.add(new Fish("Карась"));

    // Демонстрация метода move()
    for (auto animal : storage.getanimal()) {
        animal->move();
    }

    // Сохраняем данные в файл
    storage.saveToFile("lab41.txt");

    // Очищаем хранилище
    storage.remove(0);
    storage.remove(0);
    storage.remove(0);

    // Проверим очищенное хранилище
    for (auto animal : storage.getanimal()) {
        animal->move();
    }

    // Загружаем данные из файла обратно
    storage.loadFromFile("lab41.txt");

    // Проверим загруженные данные
    for (auto animal : storage.getanimal()) {
        animal->move();
    }

    return 0;
}
